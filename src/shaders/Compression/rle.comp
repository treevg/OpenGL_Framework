#version 430
layout ( binding = 0, rgba32f ) readonly uniform image2D inImg;
layout ( binding = 1, rgba32f ) writeonly uniform image2D outImg;

layout (local_size_x = 256) in;

shared vec4 scanline[256];
shared uint count[256];

void main() {

	ivec2 index = ivec2 (gl_GlobalInvocationID.xy);
	
	scanline[index.x] = imageLoad(inImg, index);
	barrier();
	
	imageStore(outImg, index.xy, scanline[index.x]);
	
	uint i = index.x;
	uint times = 1;
	bool same = true;
	while (same){
		if(scanline[i] == scanline[i+1]){
			times ++;
			i++;
			same = true;
			}
		else{
			count[index.x] = times;
			same = false;
			}
		}
	
	barrier();
		
		
		
//	imageStore(outImg, ivec2(1280 - index.x, index.y), scanline[index.x]);

//	vec4 result = scanline[index.x];
//	imageStore(outImg, index, result);
	
//	imageStore(outImgCbCr, ivec2(index.x / 2 , index.y), vec4(vec2(resulting_color.gb), 0, 0));
}