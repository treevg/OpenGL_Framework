#version 430
layout ( binding = 0, r16f ) readonly uniform image2D inImg;
layout ( binding = 1, r32f ) writeonly uniform image2D outImg;


layout (local_size_x = 8, local_size_y = 8) in;

shared float qTable[8][8] = {
//		{1000.0, 1500.0, 2500.0, 3700.0, 5100.0, 6600.0, 8200.0, 10000.0},
//		{1500.0, 1900.0, 2800.0, 3900.0, 5200.0, 6700.0, 8300.0, 10100.0},
//		{2500.0, 2800.0, 3500.0, 4500.0, 5800.0, 7200.0, 8800.0, 10500.0},
//		{3700.0, 3900.0, 4500.0, 5400.0, 6600.0, 7900.0, 9400.0, 11100.0},
//		{5100.0, 5200.0, 5800.0, 6600.0, 7600.0, 8900.0, 10300.0, 11900.0},
//		{6600.0, 6700.0, 7200.0, 7900.0, 8900.0, 10100.0, 11400.0, 13000.0},
//		{8200.0, 8300.0, 8800.0, 9400.0, 10300.0, 11400.0, 1700.0, 14200.0},
//		{10000.0, 10100.0, 10500.0, 11100.0, 11900.0, 13000.0, 14200.0, 15600.0}
		
//		{100.0, 150.0, 250.0, 370.0, 510.0, 660.0, 820.0, 1000.0},
//		{150.0, 190.0, 280.0, 390.0, 520.0, 670.0, 830.0, 1010.0},
//		{250.0, 280.0, 350.0, 450.0, 580.0, 720.0, 880.0, 1050.0},
//		{370.0, 390.0, 450.0, 540.0, 660.0, 790.0, 940.0, 1110.0},
//		{510.0, 520.0, 580.0, 660.0, 760.0, 890.0, 1030.0, 1190.0},
//		{660.0, 670.0, 720.0, 790.0, 890.0, 1010.0, 1140.0, 1300.0},
//		{820.0, 830.0, 880.0, 940.0, 1030.0, 1140.0, 1700.0, 1420.0},
//		{1000.0, 1010.0, 1050.0, 1110.0, 1190.0, 1300.0, 1420.0, 1560.0}
		
		{10.0, 15.0, 25.0, 37.0, 51.0, 66.0, 82.0, 100.0},
		{15.0, 19.0, 28.0, 39.0, 52.0, 67.0, 83.0, 101.0},
		{25.0, 28.0, 35.0, 45.0, 58.0, 72.0, 88.0, 105.0},
		{37.0, 39.0, 45.0, 54.0, 66.0, 79.0, 94.0, 111.0},
		{51.0, 52.0, 58.0, 66.0, 76.0, 89.0, 103.0, 119.0},
		{66.0, 67.0, 72.0, 79.0, 89.0, 101.0, 114.0, 130.0},
		{82.0, 83.0, 88.0, 94.0, 103.0, 114.0, 17.0, 142.0},
		{100.0, 101.0, 105.0, 111.0, 119.0, 130.0, 142.0, 156.0}
};
void main() {

	ivec2 index = ivec2 (gl_GlobalInvocationID.xy);
	
	vec4 texel_color = imageLoad(inImg, index);
	
	ivec2 newIndex;
	newIndex.x = int (mod(index.x, 8));
	newIndex.y = int (mod(index.y, 8));
	
	imageStore(outImg, index, vec4(texel_color.r * 0.5 * qTable[newIndex.x][newIndex.y], 0, 0, 0));
	
//	ivec2 newIndex;
//	newIndex.x = int(floor(index.x/8) * 4) + int(mod(index.x, 8));
//	newIndex.y = int(floor(index.y/8) * 4) + int(mod(index.y, 8));
//	
//	vec4 texel_color = imageLoad(inImg, newIndex);
//	
//	if((mod(index.x, 8) > 3) || (mod(index.y, 8) > 3)){
//		imageStore(outImg, index, vec4(0, 0, 0, 0));
//	}
//	
//	else{
//		imageStore(outImg, index, vec4(texel_color.r, 0, 0, 0));
//	}
	
}