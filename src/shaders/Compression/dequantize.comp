#version 430
layout ( binding = 0, r16f ) readonly uniform image2D inImg;
layout ( binding = 1, r32f ) writeonly uniform image2D outImg;


layout (local_size_x = 8, local_size_y = 8) in;

shared float qTable[8][8] = {
          {16.0, 11.0, 10.0, 16.0,  24.0,  40.0,  51.0,  61.0},
          {12.0, 12.0, 14.0, 19.0,  26.0,  58.0,  60.0,  55.0},
          {14.0, 13.0, 16.0, 24.0,  40.0,  57.0,  69.0,  56.0},
          {14.0, 17.0, 22.0, 29.0,  51.0,  87.0,  80.0,  62.0},
          {18.0, 22.0, 37.0, 56.0,  68.0, 109.0, 103.0,  77.0},
          {24.0, 35.0, 55.0, 64.0,  81.0, 104.0, 113.0,  92.0},
          {49.0, 64.0, 78.0, 87.0, 103.0, 121.0, 120.0, 101.0},
          {72.0, 92.0, 95.0, 98.0, 112.0, 100.0, 103.0,  99.0}
};
void main() {

	ivec2 index = ivec2 (gl_GlobalInvocationID.xy);
	
	vec4 texel_color = imageLoad(inImg, index);
	float scaling = 1.0;
	
	ivec2 newIndex;
	newIndex.x = int (mod(index.x, 8));
	newIndex.y = int (mod(index.y, 8));
	
	imageStore(outImg, index, vec4(texel_color.r * scaling * qTable[newIndex.x][newIndex.y], 0, 0, 0));
	
//	ivec2 newIndex;
//	newIndex.x = int(floor(index.x/8) * 4) + int(mod(index.x, 8));
//	newIndex.y = int(floor(index.y/8) * 4) + int(mod(index.y, 8));
//	
//	vec4 texel_color = imageLoad(inImg, newIndex);
//	
//	if((mod(index.x, 8) > 3) || (mod(index.y, 8) > 3)){
//		imageStore(outImg, index, vec4(0, 0, 0, 0));
//	}
//	
//	else{
//		imageStore(outImg, index, vec4(texel_color.r, 0, 0, 0));
//	}
	
}