#version 430
layout(binding = 0, r16f) readonly uniform image2D inImg;
layout(binding = 1, r16f) writeonly uniform image2D outValues;
layout(binding = 2, r32f) writeonly uniform image2D outCounts;

layout (local_size_x = 1, local_size_y=1, local_size_z=1) in;


void main() {
	
	float[64] colors;
	int[64] counts;
	
	ivec2 index = ivec2 (gl_GlobalInvocationID.x*64, gl_GlobalInvocationID.y);
	
	for(int i = 0; i<64; i++){
		colors[i] = imageLoad(inImg, ivec2(index.x + i, index.y)).x;
		counts[i] = 0;
	}
	
	barrier();
	
	int tempIndex = 0;
	int count = 1;
	float colorOld, color;
	colorOld = counts[0];
	for(int i = 1; i<64; i++){
		
		color = colors[i];
		
		if (color != colorOld){
			counts[tempIndex]=count;
			colors[tempIndex]=colorOld;
			tempIndex++;
			count = 1;
			colorOld = color;
		}
		else{
			count++;
		}
	}
	
}